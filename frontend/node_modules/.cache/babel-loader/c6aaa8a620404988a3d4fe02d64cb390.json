{"ast":null,"code":"import _classCallCheck from \"/Users/topgyaltsering/Desktop/team6/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/topgyaltsering/Desktop/team6/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/topgyaltsering/Desktop/team6/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/topgyaltsering/Desktop/team6/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/topgyaltsering/Desktop/team6/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/topgyaltsering/Desktop/team6/frontend/src/Result/Result.jsx\";\nimport React from \"react\"; //import { Nav, Navbar, NavItem } from \"react-bootstrap\";\n//import AuthService from \"../AuthService/AuthService\";\n//const Auth = new AuthService();\n\n/*\nTopgyal \nResult \n\n*/\n\nvar Result =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Result, _React$Component);\n\n  function Result(props) {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Result).call(this, props));\n    _this.state = {\n      items: [],\n      isLoaded: false\n    };\n    return _this;\n  } //method runs after render and updates render method\n\n\n  _createClass(Result, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://raw.githubusercontent.com/adrian-stru/travel-filters/master/DATA/json/attractions.json?token=ARfVeQkcPKWc6HCyHfODTXWdxAkqGqebks5cCgdfwA%3D%3D\") //url of api\n      .then(function (res) {\n        return res.json();\n      }) //convert result into json\n      .then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          items: json //getting data from api into state items\n\n        });\n      }); //.catch(error=>console.log('parsing failed',error))\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"laoding..\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"result\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Back\")), React.createElement(\"div\", {\n          className: \"Result\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.state,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, \"City:\", item.city);\n        }), \";\")));\n      }\n    }\n  }]);\n\n  return Result;\n}(React.Component);\n\nexport default Result;","map":{"version":3,"sources":["/Users/topgyaltsering/Desktop/team6/frontend/src/Result/Result.jsx"],"names":["React","Result","props","state","items","isLoaded","fetch","then","res","json","setState","handleSubmit","map","item","city","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AACA;;;;;;IAKMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFiB;AAMlB,G,CACD;;;;;wCACoB;AAAA;;AAClBC,MAAAA,KAAK,CACH,uJADG,CAAL,CAEE;AAFF,OAGGC,IAHH,CAGQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAHX,EAG2B;AAH3B,OAIGF,IAJH,CAIQ,UAAAE,IAAI,EAAI;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AACZL,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAAEK,IAFK,CAEA;;AAFA,SAAd;AAID,OATH,EADkB,CAWlB;AACD;;;6BACQ;AAAA,wBACmB,KAAKN,KADxB;AAAA,UACDE,QADC,eACDA,QADC;AAAA,UACSD,KADT,eACSA,KADT;;AAEP,UAAI,CAACC,QAAL,EAAe;AACb,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,OAFD,MAEO;AACL,eACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,QAAQ,EAAE,KAAKM,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,EAKE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGP,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,iBACb;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACV,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2BU,IAAI,CAACC,IAAhC,CADa;AAAA,SAAd,CADH,MADF,CALF,CADF;AAgBD;AACF;;;;EA5CkBd,KAAK,CAACe,S;;AA8C3B,eAAed,MAAf","sourcesContent":["import React from \"react\";\n\n//import { Nav, Navbar, NavItem } from \"react-bootstrap\";\n//import AuthService from \"../AuthService/AuthService\";\n//const Auth = new AuthService();\n/*\nTopgyal \nResult \n\n*/\nclass Result extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false\n    };\n  }\n  //method runs after render and updates render method\n  componentDidMount() {\n    fetch(\n      \"https://raw.githubusercontent.com/adrian-stru/travel-filters/master/DATA/json/attractions.json?token=ARfVeQkcPKWc6HCyHfODTXWdxAkqGqebks5cCgdfwA%3D%3D\"\n    ) //url of api\n      .then(res => res.json()) //convert result into json\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json //getting data from api into state items\n        });\n      });\n    //.catch(error=>console.log('parsing failed',error))\n  }\n  render() {\n    var { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div>laoding..</div>;\n    } else {\n      return (\n        <div className=\"result\">\n          <form onSubmit={this.handleSubmit}>\n            {/*.bind(this) */}\n            <button type=\"submit\">Back</button>\n          </form>\n          <div className=\"Result\">\n            <ul>\n              {items.map(item => (\n                <li key={item.state}>City:{item.city}</li>\n              ))}\n              ;\n            </ul>\n          </div>\n        </div>\n      );\n    }\n  }\n}\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}