{"version":3,"sources":["AuthService/AuthService.js","TravelNav/TravelNav.jsx","Survey/Survey.jsx","ResetPassword/ResetPassword.jsx","App/App.jsx","ForgotPassword/ForgotPassword.jsx","Register/Register.jsx","Login/Login.jsx","serviceWorker.js","index.js"],"names":["AuthService","domain","Object","classCallCheck","this","fetch","bind","login","getProfile","email","password","_this","concat","method","body","JSON","stringify","then","res","setToken","token","Promise","resolve","_this2","getToken","isTokenExpired","decode","exp","Date","now","err","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","Accept","Content-Type","loggedIn","objectSpread","_checkStatus","response","json","status","error","Error","statusText","Auth","TravelNav","react_default","a","createElement","className","Navbar","Header","Brand","Nav","NavItem","eventKey","href","pullRight","onClick","handleLogout","logout","props","history","replace","Component","Survey","context","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","document","classList","add","componentWillUnmount","remove","state","submit","startDate","endDate","distance","handleChange","assertThisInitialized","Grid","Row","Col","xs","md","es","name","selected","onChange","e","handleStartChange","handleEndChange","FormGroup","Checkbox","inline","Radio","src","alt","type","value","onClickSubmit","modal","setState","defineProperty","target","date","_this3","preventDefault","catch","console","log","hasError","ResetPassword","reenterPass","errorMessage","disabled","style","color","fontSize","onSubmit","placeholder","size","required","App","src_TravelNav_TravelNav","Switch","Route","path","component","ForgotPassword","forgotPassword","Register","Login","isForgotPassword","src_ForgotPassword_ForgotPassword","OnClickForgotPassword","esm","OnClickShowLogin","src_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","exact","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.800f1b76.chunk.js","sourcesContent":["import decode from \"jwt-decode\";\n\n/*\nAuthor: Eunice Hew\nAuthentication for login, registration, forget password\n*/\n\nexport default class AuthService {\n  constructor(domain) {\n    this.domain = domain || \"http://localhost:8080\"; // API server domain\n    this.fetch = this.fetch.bind(this);\n    this.login = this.login.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  login(email, password) {\n    // Get a token from api server using the fetch api\n    return this.fetch(`${this.domain}/Login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      this.setToken(res.token); // Setting the token in localStorage\n      return Promise.resolve(res);\n    });\n  }\n\n  forgotPassword(email) {\n    return this.fetch(`${this.domain}/Login`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email\n      })\n    }).then(res => {\n      this.setToken(res.token);\n      return Promise.resolve(res);\n    });\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken(); // Getting token from localstorage\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        // Checking if token is expired.\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  setToken(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", idToken);\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem(\"id_token\");\n  }\n\n  getProfile() {\n    // Using jwt-decode npm package to decode the token\n    return decode(this.getToken());\n  }\n\n  fetch(url, options) {\n    // performs api calls sending the required authentication headers\n    const headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    };\n\n    // Setting Authorization header\n    // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n    if (this.loggedIn()) {\n      headers[\"Authorization\"] = \"Bearer \" + this.getToken();\n    }\n\n    return fetch(url, {\n      headers,\n      ...options\n    })\n      .then(this._checkStatus)\n      .then(response => response.json());\n  }\n\n  _checkStatus(response) {\n    // raises an error in case response status is not a success\n    if (response.status >= 200 && response.status < 300) {\n      // Success status lies between 200 to 300\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./TravelNav.css\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport AuthService from \"../AuthService/AuthService\";\nconst Auth = new AuthService();\n\n/*\nAuthor: Eunice Hew\nNavigation bar containing links to survey, history, and logout\n*/\n\nclass TravelNav extends Component {\n  render() {\n    return (\n      <div className=\"TravelNav\">\n        <Navbar>\n          <Navbar.Header>\n            <Navbar.Brand>Travel App</Navbar.Brand>\n          </Navbar.Header>\n          <Nav>\n            <NavItem eventKey={1} href=\"/Survey\">\n              Survey\n            </NavItem>\n            <NavItem eventKey={2} href=\"/History\">\n              History\n            </NavItem>\n          </Nav>\n          <Nav pullRight>\n            <NavItem\n              eventKey={3}\n              href=\"/Login\"\n              onClick={this.handleLogout.bind(this)}\n            >\n              Logout\n            </NavItem>\n          </Nav>\n        </Navbar>\n      </div>\n    );\n  }\n  handleLogout() {\n    Auth.logout();\n    this.props.history.replace(\"/login\");\n  }\n}\nexport default TravelNav;\n","import React, { Component } from \"react\";\nimport {\n  FormGroup,\n  /* ControlLabel,\n  FormControl,\n  HelpBlock,*/\n  Checkbox,\n  Radio,\n  Grid,\n  Row,\n  Col\n} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./Survey.css\";\n// import ResultList from \"../ResultList/ResultList\";\n\n/*\nAuthor: Eunice Hew\nSurvey to generate travel results list\n*/\n\nclass Survey extends Component {\n  //Climate, start/end dates, price, food,  flightprice, tripcost, population, bars, events, attractions, distance\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      submit: false,\n      startDate: new Date(),\n      endDate: new Date(),\n      distance: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  render() {\n    let modal;\n    if (this.state.submit) {\n      // modal = <ResultList />;\n    }\n    return (\n      <Grid>\n        <Row className=\"survey-body\">\n          <Col xs={12} md={12}>\n            <h1 className=\"head\">Travel Survey</h1>\n            <form className=\"survey\">\n              <div className=\"column left\">\n                <p>What date range would you like travel?</p>\n                Depart:{\" \"}\n                <DatePicker\n                  name=\"startDate\"\n                  selected={this.state.startDate}\n                  onChange={e => this.handleStartChange(e)}\n                />{\" \"}\n                <br /> <br />\n                Return:{\" \"}\n                <DatePicker\n                  name=\"endDate\"\n                  selected={this.state.endDate}\n                  onChange={e => this.handleEndChange(e)}\n                />{\" \"}\n                <FormGroup>\n                  <p>What distance would you like to travel?</p>\n                  <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>\n                  <Checkbox inline>3</Checkbox> <Checkbox inline>4</Checkbox>\n                  <Checkbox inline>5</Checkbox>\n                </FormGroup>\n                <FormGroup>\n                  <p>What temperature range would you like (Farenheit)?</p>\n                  <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>\n                  <Checkbox inline>3</Checkbox> <Checkbox inline>4</Checkbox>\n                  <Checkbox inline>5</Checkbox>\n                </FormGroup>{\" \"}\n                <p>How much is your budget?</p>\n                <FormGroup className=\"pics\">\n                  {\" \"}\n                  <Radio name=\"radioGroup\" inline>\n                    <img\n                      className=\"Pikachu\"\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpRxn30r2ij1733AKJkUKK20YnSiWN-XjZFEeNvR8TQbpRAkjtjw\"\n                      alt=\"Pikachu\"\n                    />\n                  </Radio>{\" \"}\n                  <Radio name=\"radioGroup\" inline>\n                    <img\n                      className=\"Pikachu\"\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpRxn30r2ij1733AKJkUKK20YnSiWN-XjZFEeNvR8TQbpRAkjtjw\"\n                      alt=\"Pikachu\"\n                    />\n                  </Radio>{\" \"}\n                  <Radio name=\"radioGroup\" inline>\n                    <img\n                      className=\"Pikachu\"\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpRxn30r2ij1733AKJkUKK20YnSiWN-XjZFEeNvR8TQbpRAkjtjw\"\n                      alt=\"Pikachu\"\n                    />\n                  </Radio>\n                  <Radio name=\"radioGroup\" inline>\n                    <img\n                      className=\"Pikachu\"\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpRxn30r2ij1733AKJkUKK20YnSiWN-XjZFEeNvR8TQbpRAkjtjw\"\n                      alt=\"Pikachu\"\n                    />\n                  </Radio>{\" \"}\n                  <Radio name=\"radioGroup\" inline>\n                    <img\n                      className=\"Pikachu\"\n                      src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQpRxn30r2ij1733AKJkUKK20YnSiWN-XjZFEeNvR8TQbpRAkjtjw\"\n                      alt=\"Pikachu\"\n                    />\n                  </Radio>{\" \"}\n                </FormGroup>{\" \"}\n              </div>\n\n              <div className=\"column right\">\n                <FormGroup>\n                  <p>\n                    Would you like to travel somewhere urban, suburban, or\n                    rural?\n                  </p>\n                  <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>\n                  <Checkbox inline>3</Checkbox> <Checkbox inline>4</Checkbox>\n                  <Checkbox inline>5</Checkbox>\n                </FormGroup>\n                <FormGroup>\n                  <p>What kinds of events do you like?</p>\n                  <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>\n                  <Checkbox inline>3</Checkbox> <Checkbox inline>4</Checkbox>\n                  <Checkbox inline>5</Checkbox>\n                </FormGroup>\n                <FormGroup>\n                  <p>What kinds of attractions would you like to see?</p>\n                  <Checkbox inline>1</Checkbox> <Checkbox inline>2</Checkbox>\n                  <Checkbox inline>3</Checkbox> <Checkbox inline>4</Checkbox>\n                  <Checkbox inline>5</Checkbox>\n                </FormGroup>{\" \"}\n              </div>\n            </form>\n            <div className=\"survey-button\">\n              <input\n                className=\"button\"\n                type=\"submit\"\n                value=\"Submit\"\n                onClick={e => this.onClickSubmit(e)} //change to onSubmit when ready\n              />\n            </div>\n            <br />\n            <div className=\"Mod\">{modal}</div>\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handleStartChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n  handleEndChange(date) {\n    this.setState({\n      endDate: date\n    });\n  }\n  onClickSubmit(e) {\n    this.setState({ submit: true });\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.Auth.login(this.state.email, this.state.password)\n      .then(res => {\n        this.props.history.replace(\"/ResultList\");\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ hasError: true });\n      });\n  }\n  componentWillMount = () => {\n    document.body.classList.add(\"SurveyBg\");\n  };\n\n  componentWillUnmount = () => {\n    document.body.classList.remove(\"SurveyBg\");\n  };\n}\nexport default Survey;\n","import React, { Component } from \"react\";\nimport \"../Login/Login.css\";\nimport AuthService from \"../AuthService/AuthService\";\n\n/*\nAuthor: Eunice Hew\nReset password on login screen\n*/\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      reenterPass: \"\",\n      hasError: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.Auth = new AuthService();\n  }\n\n  render() {\n    let submit;\n    let errorMessage;\n\n    if (this.state.password !== this.state.reenterPass) {\n      submit = (\n        <div>\n          <input\n            className=\"button\"\n            type=\"submit\"\n            value=\"Reset Password\"\n            disabled\n          />\n          <p style={{ color: \"red\", fontSize: \"15px\" }}>\n            Passwords do not match\n          </p>\n        </div>\n      );\n    } else {\n      submit = (\n        <input className=\"button\" type=\"submit\" value=\"Reset Password\" />\n      );\n    }\n    if (this.state.hasError) {\n      errorMessage = (\n        <p style={{ color: \"red\", fontSize: \"15px\" }}>\n          Error in password reset. Try again.\n        </p>\n      );\n    }\n    return (\n      <div className=\"Login\">\n        <div className=\"Header\">\n          <h1>Travel App </h1>\n        </div>\n        <h3> Password Reset </h3>\n\n        <form onSubmit={e => this.submit(e)}>\n          <div className=\"input-box\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              size=\"25\"\n              required\n              onChange={e => this.handleChange(e)}\n            />\n            <br />\n          </div>\n          <div className=\"input-box\">\n            <input\n              type=\"password\"\n              name=\"reenterPass\"\n              placeholder=\"Re-enter Password\"\n              size=\"25\"\n              required\n              onChange={e => this.handleChange(e)}\n            />\n            <br />\n          </div>\n          {submit}\n          {errorMessage}\n          <br />\n        </form>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.Auth.login(this.state.email, this.state.password) // change?\n      .then(res => {\n        this.props.history.replace(\"/Login\");\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ hasError: true });\n      });\n  }\n  componentWillMount = () => {\n    if (this.Auth.loggedIn()) {\n      this.props.history.replace(\"/Survey\");\n    }\n    document.body.classList.add(\"LoginBg\");\n  };\n\n  componentWillUnmount = () => {\n    document.body.classList.remove(\"LoginBg\");\n  };\n}\nexport default ResetPassword;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TravelNav from \"../TravelNav/TravelNav\";\nimport Survey from \"../Survey/Survey\";\n// import ResultList from \"../ResultList/ResultList\";\nimport ResetPassword from \"../ResetPassword/ResetPassword\";\n// import History from \"../History/History\";\n// import Result from \"../Result/Result\";\nimport { Switch, Route } from \"react-router-dom\";\n// import withAuth from \"../AuthService/WithAuth\";\n\n/*\nAuthor: Eunice Hew\nRouting for components with the navigation bar \n*/\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <TravelNav />\n        <Switch>\n          {\" \"}\n          {/* <Route path=\"/Result\" component={Result} /> */}\n          {/* <Route path=\"/History\" component={History} /> */}\n          <Route path=\"/Reset\" component={ResetPassword} />\n          <Route path=\"/Survey\" component={Survey} />\n          {/* <Route path=\"/ResultList\" component={ResultList} /> */}\n        </Switch>{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n//export default withAuth(App);\n","import React, { Component } from \"react\";\nimport AuthService from \"../AuthService/AuthService\";\n\n/*\nAuthor: Eunice Hew\nForgot password on login screen\n*/\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      hasError: false\n    };\n    this.Auth = new AuthService();\n  }\n  render() {\n    let errorMessage;\n    if (this.state.hasError) {\n      errorMessage = (\n        <p style={{ color: \"red\", fontSize: \"15px\" }}>\n          Email not found. Try again.\n        </p>\n      );\n    }\n    return (\n      <form onSubmit={e => this.submit(e)}>\n        <h3>Password Reset</h3>\n        <div className=\"input-box\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            size=\"25\"\n            required\n            onChange={e => this.handleChange(e)}\n          />\n          <br />\n        </div>\n        <input className=\"button\" type=\"submit\" value=\"Submit\" />\n        <br />\n        {errorMessage}\n      </form>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  submit(e) {\n    e.preventDefault();\n    this.Auth.forgotPassword(this.state.email)\n      .then(res => {\n        this.props.history.replace(\"/Login\");\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ hasError: true });\n      });\n  }\n}\n\nexport default ForgotPassword;\n","import React, { Component } from \"react\";\nimport \"../Login/Login.css\";\nimport AuthService from \"../AuthService/AuthService\";\n\n/*\nAuthor: Eunice Hew\nRegistration on login screen\n*/\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      reenterPass: \"\",\n      hasError: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.Auth = new AuthService();\n  }\n\n  render() {\n    let submit;\n    let errorMessage;\n\n    if (this.state.password !== this.state.reenterPass) {\n      submit = (\n        <div>\n          <input className=\"button\" type=\"submit\" value=\"Register\" disabled />\n          <p style={{ color: \"red\", fontSize: \"15px\" }}>\n            Passwords do not match\n          </p>\n        </div>\n      );\n    } else {\n      submit = <input className=\"button\" type=\"submit\" value=\"Register\" />;\n    }\n    if (this.state.hasError) {\n      errorMessage = (\n        <p style={{ color: \"red\", fontSize: \"15px\" }}>\n          Error in registration. Try again.\n        </p>\n      );\n    }\n    return (\n      <div>\n        <h3> Register </h3>\n\n        <form onSubmit={e => this.submit(e)}>\n          <div className=\"input-box\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              size=\"25\"\n              required\n            />\n            <br />\n          </div>\n          <div className=\"input-box\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              size=\"25\"\n              required\n              onChange={e => this.handleChange(e)}\n            />\n            <br />\n          </div>\n          <div className=\"input-box\">\n            <input\n              type=\"password\"\n              name=\"reenterPass\"\n              placeholder=\"Re-enter Password\"\n              size=\"25\"\n              required\n              onChange={e => this.handleChange(e)}\n            />\n            <br />\n          </div>\n          {submit}\n          {errorMessage}\n          <br />\n        </form>\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.Auth.login(this.state.email, this.state.password)\n      .then(res => {\n        this.props.history.replace(\"/Survey\");\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ hasError: true });\n      });\n  }\n}\nexport default Register;\n","import React, { Component } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { ForgotPassword } from \"../ForgotPassword\";\nimport { Register } from \"../Register\";\nimport \"./Login.css\";\nimport AuthService from \"../AuthService/AuthService\";\n\n/*\nAuthor: Eunice Hew\nLogin screen, contains links to registration and forgot password\n*/\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      reenterPass: \"\",\n      isForgotPassword: false,\n      hasError: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submit = this.submit.bind(this);\n    this.Auth = new AuthService();\n  }\n\n  render() {\n    let login;\n    let errorMessage;\n    if (this.state.hasError) {\n      errorMessage = (\n        <p style={{ color: \"red\", fontSize: \"15px\" }}>\n          Error in login. Try again.\n        </p>\n      );\n    }\n    if (this.state.isForgotPassword) {\n      login = <ForgotPassword />;\n    } else {\n      login = (\n        <div>\n          <h3>Login</h3>\n          <form onSubmit={e => this.submit(e)}>\n            <div className=\"input-box\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                size=\"25\"\n                onChange={e => this.handleChange(e)}\n                required\n              />\n              <br />\n            </div>\n            <div className=\"input-box\">\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                size=\"25\"\n                onChange={e => this.handleChange(e)}\n                required\n              />\n              <br />\n            </div>\n            <input className=\"button\" type=\"submit\" value=\"Login\" />\n            <br />\n            <p\n              onClick={e => this.OnClickForgotPassword(e)}\n              className=\"Forgot-Password\"\n            >\n              Forgot Password?\n            </p>\n          </form>\n          {errorMessage}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"Login\">\n        <div className=\"Header\">\n          <h1>Travel App </h1>\n        </div>\n        <Tabs className=\"react-tabs\">\n          <TabList>\n            <Tab onClick={e => this.OnClickShowLogin(e)}> Login</Tab>\n            <Tab> Register</Tab>\n          </TabList>\n          <TabPanel>{login}</TabPanel>\n          <TabPanel>\n            <Register />\n          </TabPanel>\n        </Tabs>\n        {/* <div className=\"jwt-icon\" /> */}\n      </div>\n    );\n  }\n\n  OnClickForgotPassword(e) {\n    this.setState({ isForgotPassword: !this.state.isForgotPassword });\n  }\n\n  OnClickShowLogin(e) {\n    this.setState({ isForgotPassword: false });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.Auth.login(this.state.email, this.state.password)\n      .then(res => {\n        this.props.history.replace(\"/Survey\");\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ hasError: true });\n      });\n  }\n\n  componentWillMount = () => {\n    if (this.Auth.loggedIn()) {\n      this.props.history.replace(\"/Survey\");\n    }\n    document.body.classList.add(\"LoginBg\");\n  };\n\n  componentWillUnmount = () => {\n    document.body.classList.remove(\"LoginBg\");\n  };\n}\nexport default Login;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport { Login } from \"./Login\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n/*\nAuthor: Eunice Hew\nRouting for login page and components with the navigation bar \n*/\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/Login\" component={Login} />\n      <Route component={App} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}